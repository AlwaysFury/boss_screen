<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boss.client.dao.ProductDao">


    <select id="productCount" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM
            tb_product s
        <if test="condition.tag_ids != null">
            left join tb_productorimg_tag as t on t.itemOrImg_id = s.id
        </if>
        <where>
            s.id is not null
            <if test="condition.item_id != null">
                and s.item_id = #{condition.item_id}
            </if>
            <if test="condition.item_sku != null">
                and s.item_sku = #{condition.item_sku}
            </if>
            <if test="condition.item_status != null">
                and s.status = #{condition.item_status}
            </if>
            <if test="condition.category_id != null">
                and s.category_id = #{condition.category_id}
            </if>
            <if test="condition.shop_id != null">
                and s.shop_id = #{condition.shop_id}
            </if>
            <if test="condition.start_time != null">
                and s.create_time >= #{condition.start_time}
            </if>
            <if test="condition.end_time != null">
                and s.create_time &lt;= #{condition.end_time}
            </if>
            <if test="condition.tag_ids != null">
                and t.tag_id IN
                <foreach item="id" index="tagId" collection="tag_ids" open="(" separator="," close=")">
                    #{tagId}
                </foreach>
            </if>
            <if test="condition.rule_grade != null">
                and s.id IN
                <foreach item="id" index="index" collection="itemIds" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>


    <select id="productList" resultType="com.boss.client.vo.ProductVO">
        SELECT
            s.id, s.item_id, s.category_id, s.item_name, s.item_sku, s.mainImg_url, s.grade, t.name as shop_name, s.status, FROM_UNIXTIME(s.create_time, '%Y-%m-%d %H:%i:%s') as create_time, IFNULL(d.sale, 0) as salesVolume
        FROM
            tb_product s
        left join tb_product_extra_info d
            on s.item_id = d.item_id
        left join tb_shop as t
            on s.shop_id = t.shop_id
        <if test="condition.tag_ids != null">
            left join tb_productorimg_tag as tag on tag.itemOrImg_id = s.id
        </if>
        <where>
            s.id is not null
            <if test="condition.item_id != null">
                and s.item_id = #{condition.item_id}
            </if>
            <if test="condition.item_sku != null">
                and s.item_sku = #{condition.item_sku}
            </if>
            <if test="condition.item_status != null">
                and s.status = #{condition.item_status}
            </if>
            <if test="condition.category_id != null">
                and s.category_id = #{condition.category_id}
            </if>
            <if test="condition.shop_id != null">
                and s.shop_id = #{condition.shop_id}
            </if>
            <if test="condition.start_time != null">
                and s.create_time >= #{condition.start_time}
            </if>
            <if test="condition.end_time != null">
                and s.create_time &lt;= #{condition.end_time}
            </if>
            <if test="condition.tag_ids != null">
                and tag.tag_id IN
                <foreach item="id" index="tagId" collection="tag_ids" open="(" separator="," close=")">
                    #{tagId}
                </foreach>
            </if>
            <if test="condition.rule_grade != null">
                and id IN
                <foreach item="id" index="index" collection="itemIds" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
        <if test="condition.orderBy_name != null and condition.orderBy_name.contains('grade')">
            ORDER BY FIELD(id,
            <foreach item="id" index="index" collection="itemIds" separator=",">
                #{id}
            </foreach>)
        </if>
        <if test="condition.orderBy_name != null and !condition.orderBy_name.contains('grade')">
            order by ${condition.orderBy_name}
        </if>
        LIMIT #{current},#{size}
    </select>

    <resultMap id="productResultMap" type="com.boss.client.vo.ProductInfoVO">
        <id column="id" property="id"/>
        <result column="item_id" property="itemId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="category_id" property="categoryId"/>
        <result column="item_name" property="itemName"/>
        <result column="item_sku" property="itemSku"/>
        <result column="status" property="status"/>
        <result column="shop_id" property="shopId"/>
        <result column="shop_name" property="shopName"/>
        <collection property="tagVOList" ofType="com.boss.client.vo.TagVO">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="tagName"/>
            <result column="tag_type" property="tagType"/>
        </collection>
    </resultMap>

    <select id="getProductInfo" resultMap="productResultMap">
        select
            s.id,
            s.item_id,
            FROM_UNIXTIME(s.create_time, '%Y-%m-%d %H:%i:%s') as create_time,
            FROM_UNIXTIME(s.update_time, '%Y-%m-%d %H:%i:%s') as update_time,
            s.category_id,
            s.item_name,
            s.item_sku,
            s.status,
            s.shop_id,
            t.name as shop_name,
            tt.id AS tag_id,
            tt.tag_name,
            tt.tag_type
        from
            tb_product as s
        left JOIN tb_shop as t on s.shop_id = t.shop_id
        left JOIN tb_productorimg_tag as pt ON s.id = pt.itemOrImg_id and pt.tag_type = 'ITEM'
        left JOIN tb_tag as tt ON tt.id = pt.tag_id
        where s.id = #{item_id}
    </select>

    <select id="productGrade" resultType="com.boss.client.vo.ProductVO">
        select
            s.id,
            s.item_id,
            s.create_time
            s.update_time
            s.category_id,
            s.item_sku,
            s.status
        from
            tb_product as s
                left JOIN tb_product_extra_info as d on s.id = d.id

    </select>
</mapper>
